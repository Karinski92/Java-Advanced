package Advanced.Exams;

import java.util.Scanner;

public class Armory {
    static char armory [][];
    static int [] officerPosition = new int[] {-10, -10};
    static int [] mirror1Position = new int[] {-10, -10};
    static int [] mirror2Position = new int[] {-10, -10};
    static boolean leave = false;
    static int money;
    static int [] initialPosition = new int[] {-10, -10};



    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        armory = new char[n][n];
        for (int i = 0; i < n; i++) {
            armory [i] = scanner.nextLine().toCharArray();
        }
        for (int row = 0; row < armory.length; row++) {
            for (int col = 0; col < armory[row].length; col++) {
                if (armory[row][col] == 'A') {
                    officerPosition [0] = row;
                    officerPosition [1] = col;
                    initialPosition [0] = row;
                    initialPosition [1] = col;
                } else if (armory[row][col] == 'M') {
                    if (mirror1Position[0] == -10) {
                        mirror1Position[0] = row;
                        mirror1Position[1] = col;
                    } else {
                        mirror2Position[0] = row;
                        mirror2Position[1] = col;
                    }
                }
            }
        }

        while (!leave) {
            String command = scanner.nextLine();
            switch (command) {
                case "up":
                    officerPosition[0] = officerPosition[0] - 1;
                    checkMovement();
                    break;
                case "down":
                    officerPosition[0] = officerPosition[0] + 1;
                    checkMovement();
                    break;
                case "left":
                    officerPosition[1] = officerPosition[1] - 1;
                    checkMovement();
                    break;
                case "right":
                    officerPosition[1] = officerPosition[1] + 1;
                    checkMovement();
                    break;
            }
        }

    }
    private static void checkMovement () {
        if (!officerPositionIsValid()) {
            if (money >= 65) {
                System.out.println("Very nice swords, I will come back for more!");
            } else {
                System.out.println("I do not need more swords!");
            }
            System.out.printf("The king paid %d gold coins.%n", money);
            leave = true;
            if (officerPositionIsValid() && (initialPosition[0] != officerPosition[0] || initialPosition[1] != officerPosition[1])) {
                armory[initialPosition[0]][initialPosition[1]] = '-';
                armory[officerPosition[0]][officerPosition[1]] = 'A';
            } else {
                armory[initialPosition[0]][initialPosition[1]] = '-';
            }
            armoryPrint();
            return;
        } else {
            if (officerPosition[0] == mirror1Position[0] && officerPosition[1] == mirror1Position[1]) {
                officerPosition[0] = mirror2Position[0];
                officerPosition[1] = mirror2Position[1];
                armory[mirror1Position[0]][mirror1Position[1]] = '-';
                armory[mirror2Position[0]][mirror2Position[1]] = '-';
            } else if (officerPosition[0] == mirror2Position[0] && officerPosition[1] == mirror2Position[1]) {
                officerPosition[0] = mirror1Position[0];
                officerPosition[1] = mirror1Position[1];
                armory[mirror2Position[0]][mirror2Position[1]] = '-';
                armory[mirror1Position[0]][mirror1Position[1]] = '-';
            } else if (Character.isDigit(armory[officerPosition[0]][officerPosition[1]])) {
                money += Integer.parseInt(String.valueOf(armory[officerPosition[0]][officerPosition[1]]));
                armory[officerPosition[0]][officerPosition[1]] = '-';
                if (money >= 65) {
                    System.out.println("Very nice swords, I will come back for more!");
                    System.out.printf("The king paid %d gold coins.%n", money);
                    if (officerPositionIsValid() && (initialPosition[0] != officerPosition[0] || initialPosition[1] != officerPosition[1])) {
                        armory[initialPosition[0]][initialPosition[1]] = '-';
                        armory[officerPosition[0]][officerPosition[1]] = 'A';
                    } else {
                        armory[initialPosition[0]][initialPosition[1]] = '-';
                    }
                    armoryPrint();
                    leave = true;
                }
            }

        }

    }

    private static boolean officerPositionIsValid () {
        int row = officerPosition[0];
        int col = officerPosition[1];
        return row >= 0 && row < armory.length && col >= 0 && col < armory[row].length;
    }

    private  static void armoryPrint () {
        for (int row = 0; row < armory.length; row++) {
            for (int col = 0; col < armory[row].length; col++) {
                System.out.print(armory[row][col]);
            }
            System.out.println();
        }
    }

}

