package Advanced.Exams;

import java.util.ArrayDeque;
import java.util.Arrays;
import java.util.Scanner;

public class OSPlanning {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        ArrayDeque<Integer> tasks = new ArrayDeque<>();
        ArrayDeque<Integer> threads = new ArrayDeque<>();

        Arrays.stream(scanner.nextLine().split(", ")).mapToInt(Integer::parseInt).forEach(tasks::push);
        Arrays.stream(scanner.nextLine().split("\\s+")).mapToInt(Integer::parseInt).forEach(threads::offer);

        int nToKill = Integer.parseInt(scanner.nextLine());

        while (!(tasks.isEmpty() || threads.isEmpty())) {
            int currTask = tasks.pop();
            int currThread = threads.poll();

            if (currTask != nToKill) {
                if (currThread < currTask) {
                    tasks.push(currTask);
                }
            } else {
                System.out.printf("Thread with value %d killed task %d%n", currThread, nToKill);
                threads.push(currThread);
                threads.forEach(v -> System.out.print(v + " "));
                break;
            }


        }

    }
}
