package Advanced;

import java.util.ArrayDeque;
import java.util.Arrays;
import java.util.Scanner;
import java.util.stream.Collectors;


public class Meeting {
    private static final ArrayDeque<Integer> females = new ArrayDeque<>();
    private static final ArrayDeque<Integer> males = new ArrayDeque<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int matches = 0;

        int [] f = Arrays.stream(scanner.nextLine().split("\\s+")).mapToInt(Integer::parseInt).toArray();
        for (int i = 0; i < f.length; i++) {
            males.push(f[i]);
        }
        int [] m = Arrays.stream(scanner.nextLine().split("\\s+")).mapToInt(Integer::parseInt).toArray();
        for (int i = 0; i < m.length; i++) {
            females.offer(m[i]);
        }
        while (!(males.isEmpty() || females.isEmpty())) {

            if (males.peek() <= 0) {
                males.pop();
                continue;
            }
            if (females.peek() <= 0) {
                females.poll();
                continue;
            }

            if (females.peek() % 25 == 0) {
                females.poll();
                females.poll();
                continue;
            }


            if (males.peek() % 25 == 0) {
                males.pop();
                males.pop();
                continue;
            }


            int currentF = females.poll();
            int currentM = males.pop();

            if (currentF == currentM) {
                matches++;
            } else {
                males.push(currentM-2);
            }
        }
        System.out.printf("Matches: %d%n", matches);
        if (!males.isEmpty()) {
            String result = String.format("Males left: %s", males.stream().map(String::valueOf).collect(Collectors.joining(", ")));
            System.out.println(result);
        } else {
            System.out.print("Males left: none");
            System.out.println();
        }
        if (!females.isEmpty()) {
            String result = String.format("Females left: %s", females.stream().map(String::valueOf).collect(Collectors.joining(", ")));
            System.out.println(result);
        } else {
            System.out.print("Females left: none");
        }

    }
}
